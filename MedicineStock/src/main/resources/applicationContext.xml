<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url" value="jdbc:oracle:thin:@192.168.43.140:1521:XE"></property>
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="username" value="scott"></property>
        <property name="password" value="tiger"></property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" destroy-method="destroy">
        <property name="dataSource" ref="dataSource"></property>
        <property name="mappingLocations">
            <list>
                <value>classpath:*.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="delete*"/>
            <tx:method name="update*"/>
            <tx:method name="add*"/>
            <tx:method name="del*"/>
            <tx:method name="re*"/>
            <tx:method name="find*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="allServices"
                      expression="execution(* cn.project.service.*.*(..))"/>
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="allServices"/>
    </aop:config>


    <!--  bean  -->
    <bean class="cn.project.entity.vo.MedicineVO1" id="medicineVO" scope="prototype"></bean>

    <bean class="cn.project.dao.MedicineDaoImpl" id="medicineDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean class="cn.project.service.MedicineServiceImpl" id="medicineService">
        <property name="medicineDao" ref="medicineDao"></property>
    </bean>

    <bean class="cn.project.action.MedicineAction" id="medicineAction" scope="prototype">
        <property name="medicineService" ref="medicineService"></property>
        <property name="medicineVO" ref="medicineVO"></property>
    </bean>

    <!-- inStock -->
    <bean class="cn.project.dao.InStockDaoImpl" id="inStockDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean class="cn.project.service.InStockServiceImpl" id="inStockService">
        <property name="inStockDao" ref="inStockDao"/>
    </bean>
    <bean class="cn.project.entity.vo.InStockVO" id="inStockVO" scope="prototype"></bean>
    <bean class="cn.project.action.InStockAction" id="inStockAction" scope="prototype">
        <property name="inStockService" ref="inStockService"/>
        <property name="inStockVO" ref="inStockVO"/>
    </bean>



<!--    outStock  -->
    <bean id="outstockVo" scope="prototype" class="cn.project.entity.vo.OutstockVo"/>
    <bean id="medicineVo" scope="prototype" class="cn.project.entity.vo.MedicineVO2"/>
    <bean id="outstockMedicine" scope="prototype" class="cn.project.entity.OutstockMedicine"/>
    <bean id="outstock" scope="prototype" class="cn.project.entity.Outstock"></bean>
    <bean id="inventoryMedicineVo" scope="prototype" class="cn.project.entity.vo.InventoryMedicineVo"/>
    <bean id="inventoryController" class="cn.project.action.InventoryController">
        <property name="inventoryMedicineVo" ref="inventoryMedicineVo"/>
        <property name="inventoryVo" ref="inventoryVo"/>
        <property name="medicineVo" ref="medicineVo"/>
    </bean>

    <bean id="inventoryVo" scope="prototype" class="cn.project.entity.vo.InventoryVo"/>
    <bean id="outStockController" class="cn.project.action.OutStockController">
        <property name="outstockVo" ref="outstockVo"></property>
        <property name="medicineVo" ref="medicineVo"></property>
        <property name="outstockMedicine" ref="outstockMedicine"></property>
        <property name="outstock" ref="outstock"></property>
    </bean>
    <context:component-scan base-package="cn.project.dao,cn.project.service,cn.project.action"/>
</beans>